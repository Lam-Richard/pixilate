[{"/Users/richard/Desktop/Projects/pixilate/src/index.js":"1","/Users/richard/Desktop/Projects/pixilate/src/App.js":"2","/Users/richard/Desktop/Projects/pixilate/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609030377562,"results":"4","hashOfConfig":"5"},{"size":3387,"mtime":1609044949607,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609030377562,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"k43iwm",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/richard/Desktop/Projects/pixilate/src/index.js",[],["16","17"],"/Users/richard/Desktop/Projects/pixilate/src/App.js",["18","19","20","21"],"import './App.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport html2canvas from 'html2canvas';\nimport ReactToPrint, {useReactToPrint} from 'react-to-print';\n\nlet mouseDown = false;\ndocument.onmousedown = function() { \n    mouseDown = true;\n  }\ndocument.onmouseup = function() {\n    mouseDown = false;\n}\n\nconst colors = ['white', 'red', 'green', 'blue', \n                'brown', 'black', 'yellow', 'teal',\n                'grey', 'purple', 'pink', 'tan', 'orange',\n                'yellowgreen', 'cyan', 'lightskyblue', 'gold', 'silver',\n                'violet', 'indigo', 'salmon','HotPink','Moccasin','Khaki',\n                'Lavender','DarkSeaGreen','SteelBlue','MediumSlateBlue','Cornsilk',\n                'BlanchedAlmond','Chocolate','HoneyDew'\n                ];\n\nconst Square = ({number, paintbrush}) => {\n  const [color, setColor] = useState(\"white\")\n  const [borderColor, setBorderColor] = useState(\"lightskyblue\")\n  \n  function handleClick () {\n    setColor(paintbrush);\n    if (paintbrush == \"white\") {\n      setBorderColor(\"lightskyblue\")\n    } else if (paintbrush == \"black\") {\n      setBorderColor(\"#393737\")\n    } else {\n      setBorderColor(\"black\")\n    }\n  }\n\n  \n\n  function handleRoll () {\n    if (mouseDown) {\n      handleClick();\n    }\n  }\n\n  return (\n    <div id={number} \n    className=\"cell unselectable\" \n    draggable={false}\n    style={{backgroundColor: color,\n            borderColor: borderColor}}\n    onClick={handleClick}\n    onMouseOver={handleRoll}\n    >\n    </div>\n  )\n}\n\nconst Grid = ({paintbrush}) => {\n  let temporaryGrid = [...Array(3600).keys()];\n  return (temporaryGrid.map(number => {\n    return <Square key={number} number={number} paintbrush={paintbrush}></Square>\n  }))\n}\n\nconst Color = ({color, setBrush}) => {\n  function changeColor () {\n    setBrush(color);\n  }\n  return <div id={color} \n          className={\"Color\"} \n          draggable={false} \n          onClick={changeColor}\n          style={{backgroundColor: color, borderColor: 'black'}}\n          ></div>\n}\n\nconst Palette = ({colors, setBrush}) => {\n  return colors.map(color => {\n    return <Color key={color} color={color} setBrush={setBrush}></Color>\n  })\n}\n\nfunction App() {\n  const [brush, setBrush] = useState(\"white\")\n  const [picture, setPicture] = useState(null);\n  function handleBrush (color) {\n    setBrush(color);\n  }\n\n  const gridRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => gridRef.current,\n  });\n\n  function wrapper() {\n    setPicture(document.getElementById(\"Grid\"));\n    handlePrint();\n  }\n\n \n\n  useEffect(()=> {\n    console.log(picture);\n  },[picture])\n\n  return (\n    <div className=\"App\">\n      <div className=\"Container\" draggable=\"False\">\n        <div id=\"SubContainer\" onContextMenu={event => event.preventDefault()}>\n          <div media=\"print\" ref={gridRef} id=\"Grid\" className=\"Grid\">\n            <Grid paintbrush={brush}></Grid>\n          </div>\n        </div>\n        <div id=\"Palette\" className=\"Palette\">\n          <Palette colors={colors} setBrush={handleBrush}></Palette>\n          <Color color=\"mintcream\" setBrush={handleBrush}></Color>\n        </div>\n      </div>\n      <br></br>\n      <div id=\"SideBySide\" className=\"SideBySide\">\n        <div id=\"Save\" className=\"Save\" onClick={wrapper}>\n          Print Drawing!\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/richard/Desktop/Projects/pixilate/src/reportWebVitals.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":19},{"ruleId":"26","severity":1,"message":"30","line":4,"column":8,"nodeType":"28","messageId":"29","endLine":4,"endColumn":20},{"ruleId":"31","severity":1,"message":"32","line":29,"column":20,"nodeType":"33","messageId":"34","endLine":29,"endColumn":22},{"ruleId":"31","severity":1,"message":"32","line":31,"column":27,"nodeType":"33","messageId":"34","endLine":31,"endColumn":29},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'html2canvas' is defined but never used.","Identifier","unusedVar","'ReactToPrint' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]